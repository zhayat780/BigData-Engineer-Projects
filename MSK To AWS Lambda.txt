Step 1:
------------
Cretae VPC -- Name -- virtual-private-cloud-lambda  IPv4 CIDR -- 11.0.0.0/16
Host address range -- 11.0.0.1 - 11.0.255.254

Step 2:
-----------
Create 2 public subnets 
Public-Subnet-A-lambda--11.0.0.0/24--us-east-1a
Host address range -- 11.0.0.1 - 11.0.0.254

Public-Subnet-B-lambda--11.0.1.0/24--us-east-1b
Host address range -- 11.0.1.1 - 11.0.1.254

Private-Subnet-A-lambda--11.0.2.0/24--us-east-1a
Host address range -- 11.0.2.1 - 11.0.2.254

Private-Subnet-B-lambda--11.0.3.0/24--us-east-1b
Host address range -- 11.0.3.1 - 11.0.3.254

Step 3:
------------
Create an IGW and attach with VPC

Step 4:
---------
Create 2 route tables 1 for Public subnets and 1 for Private subnets
(Attach IGW with Public route tables)

Step 5:
------------
Launch MSK Cluster in Private subnets(keep unauthorised access and plaintext authentication)

Step 6:
-----------
Create NAT Gateway in public subnet and attach with Private Subnet route table  

Step 7:
-------------
Launch an EC2 in a public subnet in same VPC as of MSK Cluster in a public subnet.
Launch an EC2 in private subnet in same VPC as of MSK Cluster in a private subnet.

Step 8:
-----------
Add private ec2 security group and msk security group both way all traffic.

Step 9:
-------------
Enter in public subnet , from there enter in private subnet.

Step 7:
-----------
sudo yum install java-1.8.0-openjdk
wget https://archive.apache.org/dist/kafka/2.8.1/kafka_2.12-2.8.1.tgz
tar -xvf kafka_2.12-2.8.1.tgz
cd kafka_2.12-2.8.1

bin/kafka-topics.sh --create --topic demo_testing2 --bootstrap-server  --replication-factor 1 --partitions 2

Step 8:
----------
Perform local testing:
-----------------------------
bin/kafka-console-producer.sh --topic demo_testing2 --bootstrap-server 

In a new console start the kafka consumer--
cd kafka_2.12-2.8.1
bin/kafka-console-consumer.sh --topic demo_testing2 --bootstrap-server 



Step 8:
-----------
You set up a target Lambda function with MSK and VPC access.

Step 9:
-----------
Create Lambda Function with MSK Trigger 

Sample Event:
------------------
{
   "eventSource":"aws:kafka",
   "eventSourceArn":"",
   "bootstrapServers":"",
   "records":{
      "demo_testing2-0":[
         {
            "topic":"demo_testing2",
            "partition":0,
            "offset":34,
            "timestamp":1674023898925,
            "timestampType":"CREATE_TIME",
            "value":"eyJIZWxsbyI6IldvcmxkIn0=",
            "headers":[
               
            ]
         }
      ]
   }
}



import base64
import boto3
import json

def lambda_handler(event, context):
    # TODO implement
    print(event)
    for partition_key in event['records']:
        partition_value=event['records'][partition_key]
        for record_value in partition_value:
             print((base64.b64decode(record_value['value'])).decode())




